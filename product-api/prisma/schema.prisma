// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String

  carts     Cart[]
  orders    Order[]
}

model Product {
  id          Int     @id
  title       String
  price       Float
  description String
  category    String
  image       String
  rate        Float
  count       Int

  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Cart {
  id          Int         @id @default(autoincrement())
  userId      Int
  status      CartStatus? // ← Agora é opcional
  createdAt   DateTime     @default(now())

  user        User         @relation(fields: [userId], references: [id])
  items       CartItem[]
  order       Order?
}


model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  unitPrice Float

  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  cartId     Int?        @unique
  createdAt  DateTime    @default(now())
  total      Float

  user       User        @relation(fields: [userId], references: [id])
  cart       Cart?       @relation(fields: [cartId], references: [id])
  items      OrderItem[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  orderId    Int
  productId  Int
  quantity   Int
  unitPrice  Float

  order      Order   @relation(fields: [orderId], references: [id])
  product    Product @relation(fields: [productId], references: [id])
}

enum CartStatus {
  ACTIVE
  FINALIZED
  ABANDONED
  SAVED
  CANCELED
}


